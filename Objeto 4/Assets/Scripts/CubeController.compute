// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct Cube {
    float3 p1;
    float3 p2;
    float4 color;
    float v1;
    float v2;
    float mass;
    float dT;
    float dS;
};

RWStructuredBuffer<Cube> cubes;

int iteractions;

float rand(float2 co) 
{
    return (frac(sin(dot(co.xy, float2(12.9898, 78233))) * 43758.5453)) * 1;
}

[numthreads(20,1,1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    Cube cube = cubes[id.x];
    cube.v2 = 2;

    cubes[id.x] = cube;




    //Cube cube = cubes[id.x];


    //cube.v2 = cube.v1 + (9.8f * cube.dTime);
    //cube.position.y -= cube.v2;


    //cubes[id.x] = cube;
    //

    //Cube cube = cubes[id.x];

    //cube.v2 = 2;

    //cube.dS = (cube.v1 + cube.v2) / 2;
    //cube.p2.y = cube.p1.y - cube.dS;

    //cube.v1 = cube.v2;

    //cubes[id.x] = cube;
}
