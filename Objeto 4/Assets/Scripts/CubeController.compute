// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct Cube {
    float3 position;
    float4 color;
    float speed;
    float mass;
};

RWStructuredBuffer<Cube> cubes;

float rand(float2 co) 
{
    return(frac(sin(dot(co.xy, float2(12.9898, 78233))) * 43758.5453)) * 1;
}
[numthreads(11,3,1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    
    Cube cube = cubes[id.x];
    //cube.position.z = cube.position.z;
    cube.position.y += cube.speed / 1000;
   // cube.position.x = cube.position.x;
    cubes[id.x] = cube;

    cube = cubes[id.y];
    float r = rand(float2(cube.color.r, cube.color.g));
    float g = rand(float2(cube.color.g, cube.color.b));
    float b = rand(float2(cube.color.b, cube.color.r));
    cube.color = float4(r, g, b, 1);
    cubes[id.y] = cube;
}
