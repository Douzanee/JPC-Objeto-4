// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct Cube {
    float3 position;
    float4 color;
    float v1;
    float v2;
    float mass;
    float dTime;
    float force;
};

RWStructuredBuffer<Cube> cubes;

int iteractions;

float rand(float2 co)
{
    return (frac(sin(dot(co.xy, float2(12.9898, 78233))) * 43758.5453)) * 1;
}

[numthreads(64,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    Cube cube = cubes[id.x];

    cube = cubes[id.x];
    for (int i = 0; i < iteractions; i++) 
    {
        float r = rand(float2(cube.color.g, cube.color.r));
        float g = rand(float2(cube.color.b, cube.color.b));
        float b = rand(float2(cube.color.r, cube.color.r));
        cube.color = float4(r, g, b, 1);
    }
    cubes[id.x] = cube;
}
